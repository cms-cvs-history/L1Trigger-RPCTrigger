process PROD  = 
{

   service = MessageLogger
   {
      untracked vstring destinations = {"cout"}      
      #untracked vstring categories = { "FwkJob" }             
      untracked PSet cout = 
      { 
         untracked PSet default = { untracked int32 limit = 0 }
	 #untracked PSet FwkJob  = { untracked int32 limit = -1 }
      }
   }
   
   service = Timing {}

   service = RandomNumberGeneratorService
   {
      untracked uint32 sourceSeed = 98765
      PSet moduleSeeds =
      {
         untracked uint32 VtxSmeared = 12345
      }
   }
      
   
# this will run single/multi particle pt-gun
# the pt of the particles with be uniformly
# distributed in the user-specied pt-range
# particles (HepMCPRoduct) will be placed
# into edm::Event
   source = FlatRandomPtGunSource
    {
      untracked uint32 firstRun  =  1
      untracked int32  maxEvents = 20
      untracked PSet  PGunParameters =
      {
      # you can request more than 1 particle
         #untracked vint32  PartID = { 211, 11, -13 }
         untracked vint32 PartID = {13, -13}
         untracked double MinEta = -2.1
         untracked double MaxEta = 2.1
      #
      # phi must be given in radians
      #
         untracked double MinPhi = -3.14159265358979323846
         untracked double MaxPhi =  3.14159265358979323846
         untracked double MinPt  =  5.01
         untracked double MaxPt  = 150.01
      }
   untracked int32 Verbosity = 0 # set to 1 (or greater)  for printouts
}

   

   module VtxSmeared = VertexGenerator 
   {
         string type = "IOMC/EventVertexGenerators/GaussianEventVertexGenerator"
         double MeanX = 0.
         double MeanY = 0.
         double MeanZ = 0.
         double SigmaX = 0.015
         double SigmaY = 0.015
         double SigmaZ = 53.0  // in mm (as in COBRA/OSCAR)
   }

   #Geometry
   #   
   include "Geometry/CMSCommonData/data/cmsSimIdealGeometryXML.cfi"

   es_module = TrackerGeometricDetESModule {}

   # Magnetic Field
   #
   include "MagneticField/Engine/data/volumeBasedMagneticField.cfi"

   # Root/Pool output
   #
   module o1 = PoolOutputModule 
   { 
      untracked string fileName = "simevent.root" 
   }
   
   # Geant4-based CMS Det.Simulation
   #
   include "SimG4Core/Application/data/SimG4Object.cfi"
		
   
   path p1 = { VtxSmeared, SimG4Object }
   endpath outpath = { o1 }
   
}		
